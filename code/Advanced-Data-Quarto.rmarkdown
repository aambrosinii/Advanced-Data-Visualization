---
title: "Advanced Data Visualization"
author: "Alyssa Ambrosini"
date: "5-27-2025"
format: html
editor: visual
type: website
output-dir: .
Github: "https://github.com/aambrosinii/Advanced-Data-Visualization.git"
---

```{r}
library(tidyverse)
library(here)
library(ggimage)
library(showtext)
library(lubridate)
library(ggplot2)
library(dplyr)
library(ggdist)
```

```{r}
# Use Google font
font_add_google("Lato")
showtext_auto()

# Load and prep the data
data <- read_csv(here("data", "envs 193DS data - Sheet1.csv")) %>%
  mutate(
    Date = as.Date(Date),
    Day = ifelse(`Week Day (Y/n)` == "Y", "Weekday", "Weekend")
  )
```

```{r}
# Visualization 1: Creation of boxplot for Number of People in Line on Weekdays vs. Weekends

plot1 <- ggplot(data, aes(x = Day, y = `Amount of people in line`, fill = Day)) +
  geom_boxplot(alpha = 0.7, outlier.color = "black") +
  geom_jitter(width = 0.2, size = 1.5, alpha = 0.6, color = "#654321") +
  scale_fill_manual(values = c("Weekday" = "#A0522D",  # sienna (dark brown)
                               "Weekend" = "#DEB887")) # burlywood (light brown)
  labs(title = "People in Line: Weekdays vs Weekends",
       x = "Day",
       y = "Number of People") +
  theme_minimal(base_family = "Lato") 

```

```{r}

# Visualization 2: Raincloud plot of duration on weekdays and weekends

# Add font

font_add_google("Lato")
showtext_auto()

#Creating Raincloud Plot

plot2 <- ggplot(data, aes(x = Day, y = `Duration (s)`, fill = Day)) +
  
  # Half-violin plot showing the distribution
  stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA) +
  
  # Jittered points to show raw data
  geom_jitter(width = 0.15, alpha = 0.6, size = 2, color = "gray30") +
  scale_fill_manual(values = c("Weekday" = "#654321", "Weekend" = "#DEB887")) +
  
  # Adding annotation
annotate("text", x = 2.5, y = 11, label = "Most frequent wait time is near zero for each group", 
         hjust = 0.40, size = 3.2, color = "black") +
annotate("segment", x = 1.95, xend = 1, y = 5, yend = 3, 
         color = "black", arrow = arrow(length = unit(0.3, "cm")))
# Axis Labels
  labs(title = "Raincloud Plot: Wait Time Duration on Weekdays vs. Weekends",
       y = "Wait Time (s)", x = "Day Type") +
  theme_minimal(base_family = "Lato") +
  theme(legend.position = "none")
  

```

```{r}
# Visualization 3: Creating second boxplot showing duration of line wait on weekdays vs. weekends
plot3 <- ggplot(data, aes(x = Day, y = `Duration (s)`, fill = Day)) +
  geom_boxplot(alpha = 0.7, outlier.color = "black", width = 0.5) +
  geom_jitter(width = 0.2, size = 1.5, alpha = 0.6, color = "#654321") +
  scale_fill_manual(values = c("Weekday" = "#A0522D",  # sienna (dark brown)
                               "Weekend" = "#DEB887")) # burlywood (light brown)
  labs(
    title = "Observation Duration: Weekdays vs Weekends",
    x = "",
    y = "Duration (seconds)"
  ) +
  theme_minimal(base_family = "Lato") +
  theme(
    legend.position = "none",
    plot.title = element_text(size = 14, face = "bold")
  )

```



Write Up:

In this project, I use box plots and a raincloud plot to explore patterns in wait time durations on weekdays versus weekends. These visualizations were made using ggplot2, ggdist, and additional packages to enhance the styling and calrity of the project.

The first box plot highlights that more people tend to be in line on weekdays as opposed to weekends. The raincloud emphasizes that while the wait times are relatively low for both groups, there is a wider range and higher variance on weekends. The final box plot instead contrasts duration of the wait in line in seconds, allowing us to understand the range and median and compare that box plot to the first visualization showing the amount of people in line.

I used natural brown tones (sienna and burlywood) to match the nature of the data, which was collected in a coffee shop. The Lato font was chosen for its easy legibility. These choices make the data accessible and easily understandable as it follows the theme of the project.

Sources and Process:

Visualization 1:

This box plot was inspired by Julia Selge, a software engineer who posted on TidyTuesday. Her post consisted of categories similar to mine, instead depicting weekly NFL game attendance in different colors.

I first had to clean up the data and creating a new variable to distinguish weekdays and weekends. I initially used geom_boxplot() and ended up using geom_jitter() in order to show individual data points on each figure.

I was able to use examples of other people's code for this figure, as well as code previously done in workshop. I used ChatGPT to generate fitting colors that were connected to the theme and for assistance adding the Lato font.

Visualization 2:

This plot was initiallty a density distribution. Inspired by Cedric Sherer, I decided to use a raincloud plot, which combines several chart types and shows raw data, distribution, and key summary statistics.

For clearer visual comparison, I explored stat_halfeye() to create the raincloud plot and show density and variation. I also used geom_jitter() once more to show the individual data points.

For this visualization, I relied heavily on other people's code in order to learn how to work with stat_halfeye. However, I was able to implement the same font and much of the same formatting as my box plots and kept the color scheme that ChatGPT had suggested for consistency.

Visualization 3

This box plot was another version of the plot inspired by Julia Selge, only examining time spent in line over weekdays or weekends.

Similar to the first figure, I created a variable to distinguish weekdays and weekends. I initially used geom_boxplot() and ended up using geom_jitter(), which would show individual data points across the plot.

I used Julia Selge's code for this figure, as well as code we had previously done in workshop and homework assignments. I kept the colors suggested by ChatGPT and the font of my other two figures.

